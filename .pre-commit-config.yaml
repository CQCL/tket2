repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0 # Use the ref you want to point at
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-toml
      - id: check-vcs-permalinks
      - id: check-yaml
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: |
          (?x)^(
            test_files/.*|
            .*.snap|
            .*.snap.new|
            .release-please-manifest.json
          )$
      - id: trailing-whitespace
        exclude: |
          (?x)^(
            test_files/.*|
            .*.snap|
            .*.snap.new
          )$
      - id: fix-byte-order-marker
      - id: mixed-line-ending
      # Python-specific
      - id: check-ast
      - id: check-docstring-first
      - id: debug-statements

  - repo: local
    hooks:
      - id: poetry-install
        name: sync poetry deps
        description: Ensure development tools are installed.
        entry: poetry install --sync
        language: system
        files: poetry.lock
        pass_filenames: false
      - id: ruff-format
        name: ruff format
        description: Format python code with `ruff`.
        entry: poetry run ruff format
        language: system
        files: \.py$
        pass_filenames: false
      - id: ruff-check
        name: ruff
        description: Check python code with `ruff`.
        entry: poetry run ruff check --fix --exit-non-zero-on-fix
        language: system
        files: \.py$
        pass_filenames: false
      - id: mypy-check
        name: mypy
        description: Check python code with `mypy`.
        entry: poetry run mypy .
        language: system
        files: \.py$
        pass_filenames: false
      - id: cargo-fmt
        name: cargo format
        description: Format rust code with `cargo fmt`.
        entry: poetry run -- cargo fmt --all -- --check
        language: system
        files: \.rs$
        pass_filenames: false
      - id: cargo-check
        name: cargo check
        description: Check rust code with `cargo check`.
        entry: poetry run -- cargo check --all --all-features --workspace
        language: system
        files: \.rs$
        pass_filenames: false
      - id: cargo-test
        name: cargo test
        description: Run tests with `cargo test`.
        entry: poetry run -- cargo test --all-features --workspace
        language: system
        files: \.rs$
        pass_filenames: false
      - id: cargo-clippy
        name: cargo clippy
        description: Run clippy lints with `cargo clippy`.
        entry: poetry run -- cargo clippy --all-features --all-targets --workspace -- -D warnings
        language: system
        files: \.rs$
        pass_filenames: false
      - id: cargo-doc
        name: cargo doc
        description: Generate documentation with `cargo doc`.
        entry: poetry run -- cargo doc --no-deps --all-features --workspace
        language: system
        files: \.rs$
        pass_filenames: false
      - id: py-test
        name: pytest
        description: Run python tests
        # Ensure that we are using the local version of `tket2-eccs` and not the one from PyPI
        entry: poetry run -- sh -c "poetry install -C tket2-eccs && maturin develop && pytest --cov=./ --cov-report=html"
        language: system
        files: \.py$
        pass_filenames: false
