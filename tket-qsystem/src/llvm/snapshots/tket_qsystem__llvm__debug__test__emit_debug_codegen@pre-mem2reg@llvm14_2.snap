---
source: tket-qsystem/src/llvm/debug.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@res_test_state.900F7606.0 = private constant [29 x i8] c"\1CUSER:STATE:test_state_result"

define private { i64*, i64 } @_hl.main.1({ i64*, i64 } %0) {
alloca_block:
  %"0" = alloca { i64*, i64 }, align 8
  %"2_0" = alloca { i64*, i64 }, align 8
  %"4_0" = alloca { i64*, i64 }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store { i64*, i64 } %0, { i64*, i64 }* %"2_0", align 8
  %"2_01" = load { i64*, i64 }, { i64*, i64 }* %"2_0", align 8
  %tag_len = load i8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @res_test_state.900F7606.0, i32 0, i32 0), align 1
  %tag_len2 = zext i8 %tag_len to i64
  %array_ptr = extractvalue { i64*, i64 } %"2_01", 0
  %array_offset = extractvalue { i64*, i64 } %"2_01", 1
  %1 = getelementptr inbounds i64, i64* %array_ptr, i64 %array_offset
  %out_arr_alloca = alloca <{ i32, i32, i64*, i1* }>, align 8
  %x_ptr = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca, i32 0, i32 0
  %y_ptr = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca, i32 0, i32 1
  %arr_ptr = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca, i32 0, i32 2
  %mask_ptr = getelementptr inbounds <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca, i32 0, i32 3
  %2 = alloca i1, i32 2, align 1
  %3 = bitcast i1* %2 to [2 x i1]*
  store [2 x i1] zeroinitializer, [2 x i1]* %3, align 1
  store i32 2, i32* %x_ptr, align 4
  store i32 1, i32* %y_ptr, align 4
  store i64* %1, i64** %arr_ptr, align 8
  store i1* %2, i1** %mask_ptr, align 8
  %4 = load <{ i32, i32, i64*, i1* }>, <{ i32, i32, i64*, i1* }>* %out_arr_alloca, align 1
  call void @print_state_result(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @res_test_state.900F7606.0, i32 0, i32 0), i64 %tag_len2, <{ i32, i32, i64*, i1* }>* %out_arr_alloca)
  store { i64*, i64 } %"2_01", { i64*, i64 }* %"4_0", align 8
  %"4_03" = load { i64*, i64 }, { i64*, i64 }* %"4_0", align 8
  store { i64*, i64 } %"4_03", { i64*, i64 }* %"0", align 8
  %"04" = load { i64*, i64 }, { i64*, i64 }* %"0", align 8
  ret { i64*, i64 } %"04"
}

declare void @print_state_result(i8*, i64, <{ i32, i32, i64*, i1* }>*)
