from enum import Enum
from tket2.circuit import Gate
from pytket._tket.circuit import Circuit

class Tk2Circuit:
    def __init__(self, circ: Circuit) -> None: ...
    def circuit_cost(self, cost_fn) -> int: ...
    def node_op(self, node: Node) -> CustomOp: ...
    def to_tket1(self) -> Circuit: ...

class Tk2Op(Enum):
    H = 1
    CX = 2

class Node:
    def outs(self, n: int) -> list[Wire]: ...
    def __getitem__(self, i: int) -> Wire: ...

class Wire:
    def node(self) -> Node: ...

class CustomOp:
    @staticmethod
    def new_custom_quantum(name: str, op: str, qubits: tuple[int, int]) -> CustomOp: ...

class Dfg:
    def __init__(self, n_qubits: int) -> None: ...
    def inputs(self) -> list[Wire]: ...
    def add_op(self, op: Gate | CustomOp, wires: list[Wire]) -> Node: ...
    def finish(self, outputs: list[Wire]) -> Tk2Circuit: ...

def to_hugr_dot(hugr: Tk2Circuit | Circuit) -> str: ...
def validate_hugr(hugr: Tk2Circuit | Circuit) -> None: ...
