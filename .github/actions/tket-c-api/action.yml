name: "Install tket-c-api C++ library"
description: "Retrieve cached tket-c-api C++ library or build if needed"

inputs:
  install-path:
    description: "Path where the tket-c-api library will be installed"
    required: true

runs:
  using: composite
  steps:
    - name: Attempt to retrieve cached tket-c-api
      uses: actions/cache/restore@v4
      id: cache
      with:
        path: ${{ inputs.install-path }}
        key: ${{ runner.os }}-${{ hashFiles('tket1-passes/tket-c-api/**') }}

    - name: Install conan
      if: steps.cache.outputs.cache-hit != 'true'
      uses: conan-io/setup-conan@v1
      with:
        cache_packages: true

    - name: Set up conan remote
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        conan remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs --index 0

    - name: Build and install tket-c-api
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd tket1-passes/tket-c-api
        PACKAGE_NAME="tket-c-api/$(conan inspect . --format=json | jq -r '.version')"
        CONAN_OUTPUT=$(conan create . --build=missing --options="$PACKAGE_NAME:shared=True" --format=json)
        CONAN_LIB_FOLDER=$(echo "$CONAN_OUTPUT" | jq -r ".graph.nodes.\"1\".package_folder")
        cp -r $CONAN_LIB_FOLDER ${{ inputs.install-path }}

    - name: Upload compiled library to cache
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ inputs.install-path }}
        key: ${{ steps.cache.outputs.cache-primary-key }}
