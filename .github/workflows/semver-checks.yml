name: Rust Semver Checks
on:
  pull_request_target:
    branches:
      - main

jobs:
  # Check if changes were made to the relevant files.
  # Always returns true if running on the default branch, to ensure all changes are throughly checked.
  changes:
    name: Check for changes
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    # These outputs are always true when running after a merge to main, or if the PR has a `run-ci-checks` label.
    outputs:
      rust: ${{ steps.filter.outputs.rust == 'true' || steps.override.outputs.out == 'true' }}
      python: ${{ steps.filter.outputs.python == 'true' || steps.override.outputs.out == 'true' }}
    steps:
    - uses: actions/checkout@v4
    - name: Override label
      id: override
      run: |
        echo "Label contains run-ci-checks: $OVERRIDE_LABEL"
        if [ "$OVERRIDE_LABEL" == "true" ]; then
          echo "Overriding due to label 'run-ci-checks'"
          echo "out=true" >> $GITHUB_OUTPUT
        elif [ "$DEFAULT_BRANCH" == "true" ]; then
          echo "Overriding due to running on the default branch"
          echo "out=true" >> $GITHUB_OUTPUT
        fi
      env:
        OVERRIDE_LABEL: ${{ github.event_name == 'pull_request' && contains( github.event.pull_request.labels.*.name, 'run-ci-checks') }}
        DEFAULT_BRANCH: ${{ github.ref_name == github.event.repository.default_branch }}
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: .github/change-filters.yml

  build-tket1-passes:
    name: Build tket1-passes C++ library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install conan
        uses: turtlebrowser/get-conan@v1.2
      - name: Set up conan
        run: |
          conan profile detect
          conan remote add tket-libs https://quantinuumsw.jfrog.io/artifactory/api/conan/tket1-libs --index 0
      - name: Build tket1-passes C++ library
        run: |
          cd tket1-passes/cpp
          ./build.sh
      - name: Upload tket1-passes C++ library as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tket1-passes-lib
          path: tket1-passes/lib

  rs-semver-checks:
    needs: [changes, build-tket1-passes]
    if: ${{ needs.changes.outputs.rust == 'true' }}
    steps:
      - name: Download tket1-passes C++ library
        uses: actions/download-artifact@v4
        with:
          name: tket1-passes-lib
          path: tket1-passes/lib
      - uses: CQCL/hugrverse-actions/.github/workflows/rs-semver-checks.yml@main
        with:
          apt-dependencies: llvm-14
        secrets:
          GITHUB_PAT: ${{ secrets.HUGRBOT_PAT }}
