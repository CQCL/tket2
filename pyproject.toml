[tool.uv.workspace]
members = ["tket-py", "tket-eccs", "tket-exts", "qis-compiler"]

[dependency-groups]
dev = [
    "maturin >=1.7.0,<2",
    "pytest >=8.3.2,<9",
    "pytest-cov ~=7.0",
    "ruff >=0.6.2,<0.7",
    "mypy >=1.17.1,<2",
    "hypothesis >=6.111.1,<7",
    "graphviz ~=0.21.0",
    "pre-commit ~=4.3",
    "conan >= 2.0.0,<3",
    # Required to run `maturin develop`
    "pip >=25",
    # Pyyaml 0.6.0 makes setuptools fail. This ensures we're using a newer version.
    "pyyaml >=6.0.2",
    # Required for testing. We fix the upstream commit using uv.sources
    "guppylang~=0.21.0",
]

[tool.uv]
prerelease = "explicit"

[tool.uv.sources]
guppylang = { git = "https://github.com/cqcl/guppylang.git", rev = "d5b4ca6", subdirectory = "guppylang" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.maturin]
# Maturin is not the build system for the workspace (it is only used for `tket-py`).
# We mirror the `tket-py/pyproject.toml` config here so `maturin develop` still works
# from the root of the workspace.
manifest-path = "tket-py/Cargo.toml"
python-source = "tket-py"
module-name = "tket._tket"
# "extension-module" tells pyo3 we want to build an extension module (skips linking against libpython.so)
features = ["pyo3/extension-module"]

[tool.mypy]
exclude = '''(?x)(
    ^target/        # Build artifacts
    | ^notebooks/   # Examples
    | ^test_files/  # Test files
    | ^tket1-passes/tket-c-api/ # Do not check conan files
)'''
ignore_missing_imports = true

# TODO: Fix the lint errors and enable this
#strict = true

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing coverage on typing imports
    "if TYPE_CHECKING:",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "raise InternalGuppyError",

    # Don't complain about abstract methods, they aren't run:
    "@abstractmethod",
]
