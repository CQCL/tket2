[build-system]
requires = ["maturin>=1.7.4,<2.0"]
build-backend = "maturin"

[dependency-groups]
dev = [
    "guppylang~=0.21.0",
    "pytest>=8.4.2",
    "pytest-snapshot~=0.9.0",
    "cibuildwheel>=2.23.2",
    "tket-exts", # remove after next guppy-internals release
]

[project]
name = "selene-hugr-qis-compiler"
description = "A Python frontend for compiling HUGR to Quantinuum's QIS."
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Seyon Sivarajah", email = "seyon.sivarajah@quantinuum.com" },
    { name = "TKET development team", email = "tket-support@quantinuum.com" },
]
maintainers = [
    { name = "Seyon Sivarajah", email = "seyon.sivarajah@quantinuum.com" },
    { name = "TKET development team", email = "tket-support@quantinuum.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",

    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",

    "Topic :: Scientific/Engineering :: Quantum Computing",
    "Topic :: Software Development :: Compilers",

    "License :: OSI Approved :: Apache Software License",

    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
version = "0.2.8" # updated by release-please

[project.urls]
repository = "https://github.com/CQCL/tket2/tree/main/qis-compiler"

[tool.maturin]
profile = "release"
features = ["pyo3/extension-module"]
python-source = "python"
manifest-path = "Cargo.toml"
include = ["python/selene_hugr_qis_compiler/py.typed"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # flake8-annotations
    "ANN",
    # flake8-bugbear
    "B",
    # isort
    "I",
    # flake8-simplify
    "SIM",
    # pyupgrade
    "UP",
    # flake8-pyi
    "PYI",
]
ignore = ["F403", "F405", "PYI021", "PYI048"]


[tool.uv]
# Rebuild package when any rust files change
cache-keys = [
    { file = "pyproject.toml" },
    { file = "Cargo.toml" },
    { file = "rust/**/*.rs" },
]

[tool.uv.sources]
guppylang = { git = "https://github.com/cqcl/guppylang.git", rev = "d5b4ca6", subdirectory = "guppylang" }
tket-exts = { workspace = true }

[tool.cibuildwheel]
build = "cp310-*"
build-frontend = "build[uv]"
skip = "*-win32 *-manylinux_i686 *-musllinux*"
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

before-test = "uv sync --only-dev --active"
test-command = "pytest -vv {package}"

[tool.cibuildwheel.linux.environment]
PATH = '$HOME/.cargo/bin:/tmp/llvm/bin:$PATH'
LLVM_SYS_140_PREFIX = '/tmp/llvm'
environment-pass = ["CACHE_CARGO"]
[tool.cibuildwheel.linux]
before-all = '''
    curl -sSf https://sh.rustup.rs | sh -s -- -y;
    if ${CACHE_CARGO};
    then
        if [ -d /host/tmp/ci-cache/hugr-qis/.cargo ];
        then
            cp -r /host/tmp/ci-cache/hugr-qis/.cargo $HOME;
        fi;
        if [ -d /host/tmp/ci-cache/hugr-qis/target ];
        then
            cp -r /host/tmp/ci-cache/hugr-qis/target {package}
        fi;
    fi;
    dnf install libffi-devel -y
    mkdir -p /tmp/llvm;
    if [ "$(uname -m)" = "x86_64" ];
    then
        curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/clang+llvm-14.0.6-x86_64-linux-gnu-rhel-8.4.tar.xz;
        tar xf clang+llvm-14.0.6-x86_64-linux-gnu-rhel-8.4.tar.xz -C /tmp/llvm --strip-components=1;
    else
        dnf install ncurses-compat-libs ncurses-devel -y;
        curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/clang+llvm-14.0.6-aarch64-linux-gnu.tar.xz
        tar xf clang+llvm-14.0.6-aarch64-linux-gnu.tar.xz -C /tmp/llvm --strip-components=1;
    fi;
'''
before-test = '''
    if ${CACHE_CARGO};
    then
        echo "Copying cache to the host"

        mkdir -p /host/tmp/ci-cache/hugr-qis;

        if [ -d $HOME/.cargo ];
        then
            rm -rf /host/tmp/ci-cache/hugr-qis/.cargo;
            cp -r $HOME/.cargo /host/tmp/ci-cache/hugr-qis/;
        fi;

        if [ -d {package}/target ];
        then
            rm -rf /host/tmp/ci-cache/hugr-qis/target;
            cp -r {package}/target /host/tmp/ci-cache/hugr-qis;
        fi;

        # make sure the cache is readable by the host
        chmod -R a+rX /host/tmp/ci-cache/hugr-qis
    fi
    uv sync --only-dev --active
'''
repair-wheel-command = [
    'auditwheel repair -w {dest_dir} {wheel}',
    'uvx abi3audit --strict --report {wheel}',
]

[tool.cibuildwheel.macos.environment]
PATH = '/tmp/llvm:$PATH'
LLVM_SYS_140_PREFIX = '/tmp/llvm'
MACOSX_DEPLOYMENT_TARGET = "13.2"
[tool.cibuildwheel.macos]
before-all = [
    'curl -sSf https://sh.rustup.rs | sh -s -- -y',
    'if [ "$(uname -m)" = "arm64" ]; then ARCH_PREFIX=arm64-apple-darwin22.3.0; else ARCH_PREFIX=x86_64-apple-darwin; fi',
    'curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/clang+llvm-14.0.6-$ARCH_PREFIX.tar.xz',
    'mkdir -p /tmp/llvm',
    'tar xf clang+llvm-14.0.6-$ARCH_PREFIX.tar.xz -C /tmp/llvm --strip-components=1',
]
repair-wheel-command = [
    'DYLD_LIBRARY_PATH=/tmp/llvm/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}',
    'uvx abi3audit --strict --report {wheel}',
]

[tool.cibuildwheel.windows.environment]
PATH = 'C:\\LLVM\\bin;$PATH'
LLVM_SYS_140_PREFIX = 'C:\\LLVM'
[tool.cibuildwheel.windows]
before-all = [
    'rustup update',
    'curl -LO https://github.com/PLC-lang/llvm-package-windows/releases/download/v14.0.6/LLVM-14.0.6-win64.7z',
    '7z x LLVM-14.0.6-win64.7z "-oC:\LLVM" -y',
]
repair-wheel-command = [
    'uvx delvewheel repair -w {dest_dir} {wheel}',
    'uvx abi3audit --strict --report {wheel}',
]
