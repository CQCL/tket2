; ModuleID = 'hugr'
source_filename = "hugr"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-apple-darwin"

@"e_Array alre.5A300C2A.0" = private constant [57 x i8] c"8EXIT:INT:Array already contains an element at this index"
@"e_Array elem.E746B1A3.0" = private constant [43 x i8] c"*EXIT:INT:Array element is already borrowed"
@"e_Array cont.EFA5AC45.0" = private constant [70 x i8] c"EEXIT:INT:Array contains non-borrowed elements and cannot be discarded"
@"e_No more qu.3B2EEBF0.0" = private constant [47 x i8] c".EXIT:INT:No more qubits available to allocate."

declare i8* @heap_alloc(i64) local_unnamed_addr

; Function Attrs: noreturn
declare void @panic(i32, i8*) local_unnamed_addr #0

declare void @___qfree(i64) local_unnamed_addr

declare void @heap_free(i8*) local_unnamed_addr

declare i64 @___qalloc() local_unnamed_addr

declare void @___reset(i64) local_unnamed_addr

define i64 @qmain(i64 %0) local_unnamed_addr {
entry:
  tail call void @setup(i64 %0)
  %1 = tail call i8* @heap_alloc(i64 80)
  %2 = bitcast i8* %1 to i64*
  %3 = tail call i8* @heap_alloc(i64 8)
  %4 = bitcast i8* %3 to i64*
  store i64 -1, i64* %4, align 1
  br label %cond_20_case_1.i

cond_20_case_1.i:                                 ; preds = %cond_exit_20.i, %entry
  %"15_0.sroa.0.0114.i" = phi i64 [ 0, %entry ], [ %5, %cond_exit_20.i ]
  %5 = add nuw nsw i64 %"15_0.sroa.0.0114.i", 1
  %qalloc.i.i = tail call i64 @___qalloc()
  %not_max.not.i.i = icmp eq i64 %qalloc.i.i, -1
  br i1 %not_max.not.i.i, label %id_bb.i.i, label %reset_bb.i.i

reset_bb.i.i:                                     ; preds = %cond_20_case_1.i
  tail call void @___reset(i64 %qalloc.i.i)
  br label %id_bb.i.i

id_bb.i.i:                                        ; preds = %reset_bb.i.i, %cond_20_case_1.i
  %6 = insertvalue { i1, i64 } { i1 true, i64 poison }, i64 %qalloc.i.i, 1
  %7 = select i1 %not_max.not.i.i, { i1, i64 } { i1 false, i64 poison }, { i1, i64 } %6
  %.fca.0.extract.i.i = extractvalue { i1, i64 } %7, 0
  br i1 %.fca.0.extract.i.i, label %__barray_check_bounds.exit.i, label %cond_211_case_0.i.i

cond_211_case_0.i.i:                              ; preds = %id_bb.i.i
  tail call void @panic(i32 1001, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @"e_No more qu.3B2EEBF0.0", i64 0, i64 0))
  unreachable

__barray_check_bounds.exit.i:                     ; preds = %id_bb.i.i
  %8 = lshr i64 %"15_0.sroa.0.0114.i", 6
  %9 = getelementptr inbounds i64, i64* %4, i64 %8
  %10 = load i64, i64* %9, align 4
  %11 = shl nuw nsw i64 1, %"15_0.sroa.0.0114.i"
  %12 = and i64 %10, %11
  %.not.i.i = icmp eq i64 %12, 0
  br i1 %.not.i.i, label %panic.i.i, label %cond_exit_20.i

panic.i.i:                                        ; preds = %__barray_check_bounds.exit.i
  tail call void @panic(i32 1002, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @"e_Array alre.5A300C2A.0", i64 0, i64 0))
  unreachable

cond_exit_20.i:                                   ; preds = %__barray_check_bounds.exit.i
  %.fca.1.extract.i.i = extractvalue { i1, i64 } %7, 1
  %13 = xor i64 %10, %11
  store i64 %13, i64* %9, align 4
  %14 = getelementptr inbounds i64, i64* %2, i64 %"15_0.sroa.0.0114.i"
  store i64 %.fca.1.extract.i.i, i64* %14, align 4
  %exitcond.not.i = icmp eq i64 %5, 10
  br i1 %exitcond.not.i, label %loop_out.preheader.preheader.i, label %cond_20_case_1.i

loop_out.preheader.preheader.i:                   ; preds = %cond_exit_20.i
  %15 = load i64, i64* %4, align 4
  %16 = and i64 %15, 1
  %.not.i99.i.i.i = icmp eq i64 %16, 0
  br i1 %.not.i99.i.i.i, label %cond_380_case_1.i.i, label %panic.i.i.i.i

mask_block_err.i.i.i.i:                           ; preds = %cond_380_case_1.i.9.i
  tail call void @panic(i32 1002, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @"e_Array cont.EFA5AC45.0", i64 0, i64 0))
  unreachable

panic.i.i.i.i:                                    ; preds = %cond_380_case_1.i.8.i, %cond_380_case_1.i.7.i, %cond_380_case_1.i.6.i, %cond_380_case_1.i.5.i, %cond_380_case_1.i.4.i, %cond_380_case_1.i.3.i, %cond_380_case_1.i.2.i, %cond_380_case_1.i.1.i, %cond_380_case_1.i.i, %loop_out.preheader.preheader.i
  tail call void @panic(i32 1002, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @"e_Array elem.E746B1A3.0", i64 0, i64 0))
  unreachable

cond_380_case_1.i.i:                              ; preds = %loop_out.preheader.preheader.i
  %17 = xor i64 %15, 1
  store i64 %17, i64* %4, align 4
  %18 = load i64, i64* %2, align 4
  tail call void @___qfree(i64 %18)
  %19 = load i64, i64* %4, align 4
  %20 = and i64 %19, 2
  %.not.i99.i.i.1.i = icmp eq i64 %20, 0
  br i1 %.not.i99.i.i.1.i, label %cond_380_case_1.i.1.i, label %panic.i.i.i.i

cond_380_case_1.i.1.i:                            ; preds = %cond_380_case_1.i.i
  %21 = xor i64 %19, 2
  store i64 %21, i64* %4, align 4
  %22 = getelementptr inbounds i8, i8* %1, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 4
  tail call void @___qfree(i64 %24)
  %25 = load i64, i64* %4, align 4
  %26 = and i64 %25, 4
  %.not.i99.i.i.2.i = icmp eq i64 %26, 0
  br i1 %.not.i99.i.i.2.i, label %cond_380_case_1.i.2.i, label %panic.i.i.i.i

cond_380_case_1.i.2.i:                            ; preds = %cond_380_case_1.i.1.i
  %27 = xor i64 %25, 4
  store i64 %27, i64* %4, align 4
  %28 = getelementptr inbounds i8, i8* %1, i64 16
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 4
  tail call void @___qfree(i64 %30)
  %31 = load i64, i64* %4, align 4
  %32 = and i64 %31, 8
  %.not.i99.i.i.3.i = icmp eq i64 %32, 0
  br i1 %.not.i99.i.i.3.i, label %cond_380_case_1.i.3.i, label %panic.i.i.i.i

cond_380_case_1.i.3.i:                            ; preds = %cond_380_case_1.i.2.i
  %33 = xor i64 %31, 8
  store i64 %33, i64* %4, align 4
  %34 = getelementptr inbounds i8, i8* %1, i64 24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 4
  tail call void @___qfree(i64 %36)
  %37 = load i64, i64* %4, align 4
  %38 = and i64 %37, 16
  %.not.i99.i.i.4.i = icmp eq i64 %38, 0
  br i1 %.not.i99.i.i.4.i, label %cond_380_case_1.i.4.i, label %panic.i.i.i.i

cond_380_case_1.i.4.i:                            ; preds = %cond_380_case_1.i.3.i
  %39 = xor i64 %37, 16
  store i64 %39, i64* %4, align 4
  %40 = getelementptr inbounds i8, i8* %1, i64 32
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 4
  tail call void @___qfree(i64 %42)
  %43 = load i64, i64* %4, align 4
  %44 = and i64 %43, 32
  %.not.i99.i.i.5.i = icmp eq i64 %44, 0
  br i1 %.not.i99.i.i.5.i, label %cond_380_case_1.i.5.i, label %panic.i.i.i.i

cond_380_case_1.i.5.i:                            ; preds = %cond_380_case_1.i.4.i
  %45 = xor i64 %43, 32
  store i64 %45, i64* %4, align 4
  %46 = getelementptr inbounds i8, i8* %1, i64 40
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 4
  tail call void @___qfree(i64 %48)
  %49 = load i64, i64* %4, align 4
  %50 = and i64 %49, 64
  %.not.i99.i.i.6.i = icmp eq i64 %50, 0
  br i1 %.not.i99.i.i.6.i, label %cond_380_case_1.i.6.i, label %panic.i.i.i.i

cond_380_case_1.i.6.i:                            ; preds = %cond_380_case_1.i.5.i
  %51 = xor i64 %49, 64
  store i64 %51, i64* %4, align 4
  %52 = getelementptr inbounds i8, i8* %1, i64 48
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 4
  tail call void @___qfree(i64 %54)
  %55 = load i64, i64* %4, align 4
  %56 = and i64 %55, 128
  %.not.i99.i.i.7.i = icmp eq i64 %56, 0
  br i1 %.not.i99.i.i.7.i, label %cond_380_case_1.i.7.i, label %panic.i.i.i.i

cond_380_case_1.i.7.i:                            ; preds = %cond_380_case_1.i.6.i
  %57 = xor i64 %55, 128
  store i64 %57, i64* %4, align 4
  %58 = getelementptr inbounds i8, i8* %1, i64 56
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 4
  tail call void @___qfree(i64 %60)
  %61 = load i64, i64* %4, align 4
  %62 = and i64 %61, 256
  %.not.i99.i.i.8.i = icmp eq i64 %62, 0
  br i1 %.not.i99.i.i.8.i, label %cond_380_case_1.i.8.i, label %panic.i.i.i.i

cond_380_case_1.i.8.i:                            ; preds = %cond_380_case_1.i.7.i
  %63 = xor i64 %61, 256
  store i64 %63, i64* %4, align 4
  %64 = getelementptr inbounds i8, i8* %1, i64 64
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 4
  tail call void @___qfree(i64 %66)
  %67 = load i64, i64* %4, align 4
  %68 = and i64 %67, 512
  %.not.i99.i.i.9.i = icmp eq i64 %68, 0
  br i1 %.not.i99.i.i.9.i, label %cond_380_case_1.i.9.i, label %panic.i.i.i.i

cond_380_case_1.i.9.i:                            ; preds = %cond_380_case_1.i.8.i
  %69 = xor i64 %67, 512
  store i64 %69, i64* %4, align 4
  %70 = getelementptr inbounds i8, i8* %1, i64 72
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 4
  tail call void @___qfree(i64 %72)
  %73 = load i64, i64* %4, align 4
  %74 = or i64 %73, -1024
  store i64 %74, i64* %4, align 4
  %75 = icmp eq i64 %74, -1
  br i1 %75, label %__hugr__.main.1.exit, label %mask_block_err.i.i.i.i

__hugr__.main.1.exit:                             ; preds = %cond_380_case_1.i.9.i
  tail call void @heap_free(i8* nonnull %1)
  tail call void @heap_free(i8* nonnull %3)
  %76 = tail call i64 @teardown()
  ret i64 %76
}

declare void @setup(i64) local_unnamed_addr

declare i64 @teardown() local_unnamed_addr

attributes #0 = { noreturn }

!name = !{!0}

!0 = !{!"mainlib"}
