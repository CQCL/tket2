---
source: qis-compiler/rust/gpu.rs
expression: mod_str
---
; ModuleID = 'test_context'
source_filename = "test_context"

@gpu_function_id_example_function = global i64 -1
@gpu_validated = global i8 0
@no_gpu_error = private unnamed_addr constant [27 x i8] c"No error message available\00", align 1
@function_name = private unnamed_addr constant [17 x i8] c"example_function\00", align 1

define private i64 @_hl.main.1({} %0) {
alloca_block:
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  %function_id_call = call i64 @gpu_get_function_id_example_function()
  ret i64 %function_id_call
}

; Function Attrs: noinline
define i64 @gpu_get_function_id_example_function() #0 {
entry:
  call void @run_gpu_validation()
  %function_id = load i64, i64* @gpu_function_id_example_function, align 4
  %needs_lookup = icmp eq i64 %function_id, -1
  br i1 %needs_lookup, label %lookup, label %done

lookup:                                           ; preds = %entry
  %function_id_ptr = alloca i64, align 8
  %function_id_call = call i8 @gpu_get_function_id(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @function_name, i32 0, i32 0), i64* %function_id_ptr)
  call void @validate_gpu_response(i8 %function_id_call)
  %function_id1 = load i64, i64* %function_id_ptr, align 4
  store i64 %function_id1, i64* @gpu_function_id_example_function, align 4
  br label %done

done:                                             ; preds = %lookup, %entry
  %function_id2 = load i64, i64* @gpu_function_id_example_function, align 4
  ret i64 %function_id2
}

; Function Attrs: noinline
define void @run_gpu_validation() #0 {
entry:
  %validated = load i8, i8* @gpu_validated, align 1
  %already_validated = icmp ne i8 %validated, 0
  br i1 %already_validated, label %done, label %validate

done:                                             ; preds = %entry
  ret void

validate:                                         ; preds = %entry
  %validate_call = call i8 @gpu_validate_api(i64 0, i64 1, i64 0)
  call void @validate_gpu_response(i8 %validate_call)
  store i8 1, i8* @gpu_validated, align 1
  ret void
}

declare i8 @gpu_validate_api(i64, i64, i64)

; Function Attrs: noinline
define void @validate_gpu_response(i8 %0) #0 {
entry:
  %success = icmp ne i8 %0, 0
  br i1 %success, label %ok, label %err

ok:                                               ; preds = %entry
  ret void

err:                                              ; preds = %entry
  call void @gpu_error_handler()
  unreachable
}

; Function Attrs: noinline
define void @gpu_error_handler() #0 {
entry:
  %error_message = call i8* @gpu_get_error()
  %is_null = icmp eq i8* %error_message, null
  %error_message_nonnull = select i1 %is_null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @no_gpu_error, i32 0, i32 0), i8* %error_message
  call void @panic_str(i32 70002, i8* %error_message_nonnull)
  unreachable
}

declare i8* @gpu_get_error()

; Function Attrs: noreturn
declare void @panic_str(i32, i8*) #1

declare i8 @gpu_get_function_id(i8*, i64*)

attributes #0 = { noinline }
attributes #1 = { noreturn }
